Version 0.1.1 (March 12, 2009, Revision 349)

        This version will be used for CYSF benchmarks.  Since 0.1.0, the main
        changes are bugfixes: a general rounding bug of values unchanged by
        impl_scale, and a BID division precision bug.  As well, plot.sh has been
        improved to generate png files if a second argument consisting of "png"
        is present.

Version 0.1.0 (March 12, 2009, Revision 343)

        The x86_64 target is now complete!  This release will be used for
        the Team Canada application project report benchmark results.
        Unfortunately, x86 didn't make it; perhaps it will by ISEF.

Version 0.0.6 (March 7, 2009, Revision 321)

        DPD multiplication has been implemented for the x86_64 target, and DPD
        addition and subtraction have been re-worked to use bit operations
        rather than adding digits in loops, for a massive speed improvement.  As
        well, DPD look-up tables are now generated by C code, rather than shell
        script.  Currently, x86 impl_addsub-bid, impl_mul-dpd, and
        signedzero-bid tests are expected to fail, while x86_64 should have no
        test failures.  A summary of incomplete routines follows:

        =======
        x86 DPD
        =======

         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        =======
        x86 BID
        =======

         - fpfd32_impl_addsub: Non-functional stub.

        ==========
        x86_64 DPD
        ==========

         - fpfd32_impl_div: Non-functional stub.

Version 0.0.5 (February 16, 2009, Revision 287)

        Addition and subtraction are now implemented for the BID encoding on the
        x86_64 target, which means that the binary encoding is now complete on
        the x86_64.  This does however mean that the new impl_addsub-bid test
        will fail on the x86, where the BID impl_addsub routine is incomplete;
        any other test suite failures should be reported. Additionally, an
        important BID division bug has been fixed on both the x86 and x86_64
        architectures.  Following are the routines which are not complete, for
        each encoding and architecture:

        =======
        x86 DPD
        =======

         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        =======
        x86 BID
        =======

         - fpfd32_impl_addsub: Non-functional stub.

        ==========
        x86_64 DPD
        ==========

         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

Version 0.0.4 (January 29, 2009, Revision 252)

        The only change from 0.0.3 is that division is now implemented for the
        BID encoding on x86 and x86_64 targets.  An implementation status
        summary of the library internals follows:

        =======
        x86 DPD
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_addsub
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        =======
        x86 BID
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_mul
         - fpfd32_impl_div
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.

        ==========
        x86_64 DPD
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_addsub
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        ==========
        x86_64 BID
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_mul
         - fpfd32_impl_div
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.

Version 0.0.3 (January 11, 2009, Revision 243)

        Version 0.0.3 features an x86 impl_addsub implementation, and numerous
        bug fixes to the x86_64 implementation.  The API has not changed since
        the last release, and it should be stable from now on, but that's NOT
        a guarantee.  The two other changes are a new gcc benchmark (see the
        README) and a new C++ test, which ensures that the FPFD interface works
        from C and C++.  This means you now need a C++ compiler to compile FPFD.
        An implementation status summary of the library internals follows:

        =======
        x86 DPD
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_addsub
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        =======
        x86 BID
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_mul
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        ==========
        x86_64 DPD
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_addsub
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        ==========
        x86_64 BID
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_mul
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.
         - fpfd32_impl_div: Ditto.

Version 0.0.2 (January 11, 2009, Revision 207)

        This release now features functional BID multiplication for all
        architectures, and DPD addition/subtraction for x86_64. As well,
        innumerable bugs have been fixed, largely due to vast test suite
        improvements, and the benchmarking suite has been improved. However, due
        to the new impl_addsub test, `make check' fails on x86. If more than the
        impl_addsub-dpd test fails, please report a bug with the output.

        There are two API changes: fpfd32_random and fpfd32_srandom (which
        should have been fpfd_srandom) have been removed (well, moved into the
        benchmarking suite), and an fpfd32_fma function has been added, for
        Fused Multiply-Add. Also, FPFD can now optionally override GCC's
        _Decimal32 operations with its own implementation; this feature can be
        enabled with the configure option `--enable-gcc-override'. A complete
        implementation summary follows:

        =======
        x86 DPD
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.
         - fpfd32_impl_mul: Ditto.
         - fpfd32_impl_div: Ditto.

        =======
        x86 BID
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_mul
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        ==========
        x86_64 DPD
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_addsub
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_mul: Non-functional stub.
         - fpfd32_impl_div: Ditto.

        ==========
        x86_64 BID
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_mul
         - fpfd32_impl_scale
         - fpfd32_impl_inc
         - fpfd32_impl_compress

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.
         - fpfd32_impl_div: Ditto.

Version 0.0.1 (October 5, 2008, Revision 133)

        This release is also not functional or complete; it has been released
        because the fpfd32_impl_scale routines are complete for all encodings
        and architectures. As a result, fpfd32_mul should work completely for
        the binary encoding, though this has not been well tested. The other
        major change affects the API of nearly every function; fpfd now supports
        an enumerated type, fpfd_flags_t, which represents the IEEE 754-2008
        exception flags. A pointer to an fpfd_flags_t may be passed to almost
        every fpfd function as the last parameter, or NULL if an application
        does not wish to deal with these flags. Below is a summary of
        implementation status of various components.

        =======
        x86 DPD
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_scale
         - fpfd32_impl_inc

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.

        Missing:
         - fpfd32_impl_mul
         - fpfd32_impl_div

        =======
        x86 BID
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_inc
         - fpfd32_impl_mul
         - fpfd32_impl_scale

        Missing:
         - fpfd32_impl_addsub
         - fpfd32_impl_div

        ==========
        x86_64 DPD
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_scale
         - fpfd32_impl_inc

        Missing:
         - fpfd32_impl_addsub
         - fpfd32_impl_mul
         - fpfd32_impl_div

        ==========
        x86_64 BID
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_inc
         - fpfd32_impl_mul
         - fpfd32_impl_scale

        Missing:
         - fpfd32_impl_addsub
         - fpfd32_impl_div

Version 0.0.0 (October 5, 2008, Revision 110)

        This release is not nearly functional or complete; it is being released
        because the fpfd32_impl_scale algorithms are nearly complete for each
        architecture, and a stable implementation which is guaranteed to
        compile may be of some value. The implementation status of various
        components follows:

        =======
        x86 DPD
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_scale
         - fpfd32_impl_inc

        Partially implemented:
         - fpfd32_impl_addsub: Non-functional stub.

        Missing:
         - fpfd32_impl_mul
         - fpfd32_impl_div

        =======
        x86 BID
        =======

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_inc
         - fpfd32_impl_mul

        Partially implemented:
         - fpfd32_impl_scale: Only handles 32-bit values, doesn't subnormalize
                              correctly.

        Missing:
         - fpfd32_impl_addsub
         - fpfd32_impl_div

        ==========
        x86_64 DPD
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_scale
         - fpfd32_impl_inc

        Missing:
         - fpfd32_impl_addsub
         - fpfd32_impl_mul
         - fpfd32_impl_div

        ==========
        x86_64 BID
        ==========

        Implemented:
         - fpfd32_impl_expand
         - fpfd32_impl_compress
         - fpfd32_impl_inc
         - fpfd32_impl_mul

        Partially implemented:
         - fpfd32_impl_scale: Doesn't subnormalize correctly.

        Missing:
         - fpfd32_impl_addsub
         - fpfd32_impl_div
